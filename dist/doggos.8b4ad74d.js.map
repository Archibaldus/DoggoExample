{"version":3,"sources":["doggos.js"],"names":["DOG_URL","doggos","document","querySelector","spinner","addNewDoggo","promise","fetch","showSpinner","then","response","processingPromise","json","processedResponse","console","log","status","img","createElement","src","message","alt","appendChild","hideSpinner","classList","add","remove","addEventListener"],"mappings":"AAAA,IAAMA,OAAO,GAAG,yCAAhB,EAEA;AACA;;AACA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,IAAMC,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;;AAGA,SAASE,WAAT,GAAsB;AAClB,MAAMC,OAAO,GAAGC,KAAK,CAACP,OAAD,CAArB;AACAQ,EAAAA,WAAW;AACXF,EAAAA,OAAO,CACNG,IADD,CACM,UAASC,QAAT,EAAkB;AACpB,QAAMC,iBAAiB,GAAGD,QAAQ,CAACE,IAAT,EAA1B;AACA,WAAOD,iBAAP;AACH,GAJD,EAKCF,IALD,CAKM,UAASI,iBAAT,EAA2B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAiB,CAACG,MAA9B;AACA,QAAMC,GAAG,GAAGf,QAAQ,CAACgB,aAAT,CAAuB,KAAvB,CAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAUN,iBAAiB,CAACO,OAA5B;AACAH,IAAAA,GAAG,CAACI,GAAJ,GAAU,YAAV;AACApB,IAAAA,MAAM,CAACqB,WAAP,CAAmBL,GAAnB;AACAM,IAAAA,WAAW;AACd,GAZD;AAcAT,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAAA,EACD;;AAEA,SAASP,WAAT,GAAuB;AACnBJ,EAAAA,OAAO,CAACoB,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AACH;;AAED,SAASF,WAAT,GAAuB;AACnBnB,EAAAA,OAAO,CAACoB,SAAR,CAAkBE,MAAlB,CAAyB,MAAzB;AACH;;AAEDxB,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCwB,gBAArC,CAAsD,OAAtD,EAA+DtB,WAA/D","file":"doggos.8b4ad74d.js","sourceRoot":"..","sourcesContent":["const DOG_URL = \"https://dog.ceo/api/breeds/image/random\";\r\n\r\n// returns a Promise that won't reject on HTTP error status even if 404 or 500; won't receive cross-site cookies and won't send cookies\r\n// const promise = fetch(DOG_URL); //fetch() method provides an easy, logical way to fetch ressources asynchronously across the network\r\nconst doggos = document.querySelector(\".doggos\");\r\nconst spinner = document.querySelector(\"#spinner\");\r\n\r\n\r\nfunction addNewDoggo(){\r\n    const promise = fetch(DOG_URL);\r\n    showSpinner();\r\n    promise\r\n    .then(function(response){\r\n        const processingPromise = response.json();\r\n        return processingPromise;\r\n    })\r\n    .then(function(processedResponse){\r\n        console.log(processedResponse.status);\r\n        const img = document.createElement(\"img\");\r\n        img.src = processedResponse.message;\r\n        img.alt = \"Cute doggo\";\r\n        doggos.appendChild(img);\r\n        hideSpinner();\r\n    });\r\n\r\n    console.log(\"this will log first\");\r\n};\r\n// fetching a JSON file across the network and printing it to the console\r\n\r\nfunction showSpinner() {\r\n    spinner.classList.add(\"show\");\r\n}\r\n\r\nfunction hideSpinner() {\r\n    spinner.classList.remove('show');\r\n}\r\n\r\ndocument.querySelector(\".add-doggo\").addEventListener(\"click\", addNewDoggo);"]}